{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/gold_movies_example')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Example pipeline for generating gold layer movies data",
                "activities": [
                    {
                        "name": "process_data",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [
                            {
                                "activity": "output_path",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "1:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/FileStore/scripts/gold_movies_example/process.py",
                            "parameters": [
                                "@variables('run_id')",
                                "@string(variables('automated_test_flag'))",
                                "@variables('output_path')"
                            ],
                            "libraries": [
                                {
                                    "whl": "dbfs:/FileStore/jars/datastacks-latest-py3-none-any.whl"
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_Databricks_Small",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "run_id",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "run_id",
                            "value": {
                                "value": "@{if(or(empty(pipeline().parameters.run_id),equals(pipeline().parameters.run_id, 'auto')), pipeline().RunId, pipeline().parameters.run_id)}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "automated_test_flag",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "run_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "automated_test_flag",
                            "value": {
                                "value": "@startswith(variables('run_id'), pipeline().parameters.automated_test_prefix)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "output_path",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "automated_test_flag",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "output_path",
                            "value": {
                                "value": "@{pipeline().parameters.default_output_path}@{if(variables('automated_test_flag'), concat('/automated_tests/', variables('run_id')), '')}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "automated_test_prefix": {
                        "type": "string",
                        "defaultValue": "automated_test_"
                    },
                    "run_id": {
                        "type": "string",
                        "defaultValue": "auto"
                    },
                    "default_output_path": {
                        "type": "string",
                        "defaultValue": "gold_movies_example"
                    }
                },
                "variables": {
                    "automated_test_flag": {
                        "type": "Boolean"
                    },
                    "run_id": {
                        "type": "String"
                    },
                    "output_path": {
                        "type": "String"
                    }
                },
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": []
            },
            "dependsOn": []
        }
    ]
}
