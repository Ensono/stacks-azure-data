{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "amido-stacks-dev-euw-de"
        },
        "ls_Blob_ConfigStore_properties_typeProperties_serviceEndpoint": {
            "type": "string",
            "defaultValue": "https://amidostacksdeveuwdeconfi.blob.core.windows.net/"
        },
        "ls_ADLS_DataLake_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://amidostacksdeveuwdeadls.dfs.core.windows.net/"
        },
        "ls_KeyVault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://amidostacksdeveuwde.vault.azure.net/"
        },
        "ls_AzureSql_ExampleSource_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "AzureSqlExampleAdfConnectionString"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
       
        {
            "name": "[concat(parameters('factoryName'), '/Ingest_AzureSql_Example')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Ingest from demo Azure SQL database using ingest config file.",
                "activities": [
                    {
                        "name": "Get_Ingest_Config",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Get_Ingest_Config",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "config_file": {
                                    "value": "@{pipeline().parameters.data_source_name}.json",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "For_Each_Ingest_Entity",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get_Ingest_Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get_Ingest_Config').output.pipelineReturnValue['config'][0]['ingest_entities']",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "SQL_to_ADLS",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate_Ingest_Query",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "1:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "meta_ingestion_datetime",
                                                    "value": {
                                                        "value": "@utcNow()",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "meta_ingestion_pipeline",
                                                    "value": {
                                                        "value": "@pipeline().Pipeline",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "meta_ingestion_run_id",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "sqlReaderQuery": {
                                                "value": "@activity('Generate_Ingest_Query').output.pipelineReturnValue['generated_query']",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "00:10:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "validateDataConsistency": true,
                                        "logSettings": {
                                            "enableCopyActivityLog": true,
                                            "copyActivityLogSettings": {
                                                "logLevel": "Warning",
                                                "enableReliableLogging": false
                                            },
                                            "logLocationSettings": {
                                                "linkedServiceName": {
                                                    "referenceName": "ls_Blob_ConfigStore",
                                                    "type": "LinkedServiceReference"
                                                },
                                                "path": {
                                                    "value": "adf-config/logs/@{pipeline().Pipeline}/@{item()['display_name']}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_ex_AzureSql_ExampleSource",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_dp_DataLake_Parquet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "directory": {
                                                    "value": "@{pipeline().parameters.data_source_name}/@{item()['display_name']}/v@{string(item()['version'])}/@{item()['load_type']}/@{pipeline().parameters.window_start}/@{if(empty(pipeline().parameters.correlation_id), pipeline().RunId, pipeline().parameters.correlation_id)}",
                                                    "type": "Expression"
                                                },
                                                "filename": {
                                                    "value": "@{item()['display_name']}.parquet",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Generate_Ingest_Query",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Generate_Ingest_Query",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ingest_entity_config": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "window_start": {
                                                "value": "@pipeline().parameters.window_start",
                                                "type": "Expression"
                                            },
                                            "window_end": {
                                                "value": "@pipeline().parameters.window_end",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "data_source_name": {
                        "type": "string",
                        "defaultValue": "example_azuresql_1"
                    },
                    "window_start": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    },
                    "window_end": {
                        "type": "string",
                        "defaultValue": "2020-01-31"
                    },
                    "correlation_id": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Ingest"
                },
                "annotations": [],
                "lastPublishTime": "2023-05-15T11:08:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_ex_AzureSql_ExampleSource')]",
                "[concat(variables('factoryId'), '/datasets/ds_dp_DataLake_Parquet')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_Blob_ConfigStore')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_dp_DataLake_Parquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_ADLS_DataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "directory": {
                        "type": "String"
                    },
                    "filename": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Data_Platform/Data_Lake"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "container": "raw"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_ADLS_DataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_ex_AzureSql_ExampleSource')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_AzureSql_ExampleSource",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "External_Sources"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_AzureSql_ExampleSource')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_Blob_ConfigStore')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('ls_Blob_ConfigStore_properties_typeProperties_serviceEndpoint')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_ADLS_DataLake')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_ADLS_DataLake_properties_typeProperties_url')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_KeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('ls_KeyVault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_AzureSql_ExampleSource')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Azure SQL example linked service. These properties will may over overridden when deployed to other environments.\nTODO: Add password to KV.",
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_KeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('ls_AzureSql_ExampleSource_properties_typeProperties_connectionString_secretName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_KeyVault')]"
            ]
        }
    ]
}