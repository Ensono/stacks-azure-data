name: "$(Build.SourceBranchName)-init"

pr:
  branches:
    include:
      - "main"
  paths:
    include:
      - build/azDevOps/azure/network/*
      - deploy/azure/networking/*

trigger:
  branches:
    include:
      - "main"
  paths:
    include:
      - build/azDevOps/azure/network/*
      - deploy/azure/networking/*
variables:
  - template: air-infrastructure-data-network-vars.yml

stages:
  - stage: Build
    variables:
      - group: stacks-credentials-nonprod-kv

    jobs:
      - job: Validate
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - template: ../../templates/air-infrastructure-data-setup.yml
            parameters:
              TaskctlVersion: ${{ variables.TaskctlVersion }}

          - task: Bash@3
            displayName: "TaskCTL: Setup"
            inputs:
              targetType: inline
              script: taskctl setup
            env:
              DOCKER_IMAGE_TAG: $(version_number)

          - task: Bash@3
            displayName: "TaskCTL: Lint"
            inputs:
              targetType: inline
              script: taskctl lint
            env:
              # Dotnet Build
              SELF_REPO_SRC: $(self_repo_src)
              CLOUD_PROVIDER: "$(cloud_provider)"
              ARM_TENANT_ID: "$(azure-tenant-id)"
              ARM_SUBSCRIPTION_ID: "$(azure-subscription-id)"
              ARM_CLIENT_ID: "$(azure-client-id)"
              ARM_CLIENT_SECRET: "$(azure-client-secret)"

  - stage: Deploy
    dependsOn: Build
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))
    variables:
      - group: stacks-credentials-nonprod-kv
      - name: Environment.ShortName
        value: dev
      # Available in Terraform Output, but not yet enabled to export as pipeline vars
      - name: dns_base_domain
        value: nonprod.amidostacks.com
      - name: core_environment
        value: nonprod
    jobs:
      - deployment: Infra
        pool:
          vmImage: $(pool_vm_image)
        environment: ${{ variables.domain }}
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../../templates/air-infrastructure-data-setup.yml
                  parameters:
                    TaskctlVersion: ${{ variables.TaskctlVersion }}

                - task: Bash@3
                  displayName: "Taskctl: Infrastructure"
                  inputs:
                    targetType: inline
                    script: taskctl infrastructure
                    informationPreference: continue
                  env:
                    ENV_NAME: $(Environment.ShortName)
                    # Azure Authentication
                    CLOUD_PROVIDER: "$(cloud_provider)"
                    ARM_CLIENT_ID: $(azure-client-id)
                    ARM_CLIENT_SECRET: $(azure-client-secret)
                    ARM_SUBSCRIPTION_ID: $(azure-subscription-id)
                    ARM_TENANT_ID: $(azure-tenant-id)
                    # Terraform Backend Configuration
                    TF_STATE_CONTAINER: $(tf_state_container)
                    TF_STATE_KEY: $(tf_state_key)
                    TS_STATE_RG: $(tf_state_rg)
                    TF_STATE_STORAGE: $(tf_state_storage)
                    TF_BACKEND_ARGS: "key=$(tf_state_key),storage_account_name=$(TF_STATE_STORAGE),resource_group_name=$(TF_STATE_RG),container_name=$(TF_STATE_CONTAINER),subscription_id=$(azure-subscription-id),tenant_id=$(azure-tenant-id),client_id=$(azure-client-id),client_secret= $(azure-client-secret)"
                    # Deployment Specific Configuration
                    TF_VAR_core_environment: $(core_environment)
                    TF_VAR_name_component: $(component)
                    TF_VAR_resource_group_location: $(region)
                    TF_VAR_name_company: $(company)
                    TF_VAR_name_project: $(project)
                    TF_VAR_name_domain: $(domain)
                    TF_VAR_stage: $(Environment.ShortName)
                    TF_VAR_enable_private_networks: true
                    TF_VAR_link_dns_network: true
