variables:
  - name: self_repo
    value: stacks-azure-data-ingest
  - name: self_generic_name
    value: stacks-infrastructure

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # - we suggest you create a runtime variable that is dynamically set based on a branch currently running
  # **`terraform_state_workspace: `**
  # avoid running anything past dev that is not on master
  # sample value: company-webapp
  - name: tf_state_key
    value: core-data-network
  - name: TF_FILE_LOCATION
    value: $(self_repo_tf_src)

  # SelfConfig
  # If you haven't specified source_repo at cli runtime please ensure you replace it here
  # It is case sensitive for TFS based repos
  # - name: self_repo_src
  #   value: src/api
  - name: self_repo_dir
    value: "$(Agent.BuildDirectory)/s/$(self_repo)"
  - name: self_repo_tf_src
    value: deploy/azure/networking
  - name: self_repo_tf_dir
    value: "$(self_repo_dir)/$(self_repo_tf_src)"

  # Versioning
  - name: version_revision
    value: $[counter(join(variables['version_major'], join('-', variables['version_minor'])), 0)]
  - name: version_number
    value: $(version_major).$(version_minor).$(version_revision)

  # GitHub infomration
  - name: create_release
    value: true
  - name: github_org
    value: $(company)
